#!/bin/bash

function error {
  echo "[ERROR] $*" > /dev/stderr
}

function info {
  echo "[INFO] $*" > /dev/stderr
}

function debug {
  [ ! -z "${DEBUG_MODE}" ] && echo "[DEBUG] $*" > /dev/stderr
}

function fail {
    error "$*"
    exit 1
}

function escapeRegistry {
    echo $(echo "$1" |tr '.' '_' |tr [:lower:] [:upper:])
}

function unescapeRegistry {
    echo $(echo "$1" |tr '_' '.' |tr [:upper:] [:lower:])
}

function getUserName {
    local registry=$1
    local userName=$(get ${registry} 'USERNAME')
    if [ -z "${userName}" ]; then
      fail "No userName found for registry '${registry}'"
    fi
    echo "${userName}"
}

function getPassword {
    local registry=$1
    local password=$(get ${registry} 'PASSWORD')
    if [ -z "${password}" ];then
      fail "No password found for registry '${registry}'"
    fi
    echo "${password}"
}

function get {
    local registry=$1
    local appendix=$2
    [ -z "${registry}" ] && fail "No registry"
    local escapedRegistry=$(escapeRegistry ${registry})
    local envVar="${escapedRegistry}_${appendix}"
    info "Searching for environment variable '${envVar}'"
    value=$(env |grep ^${envVar}= |sed 's/.*=//g')
    if [ -z ${value} ];then
      envVar="DOCKER_${appendix}"
      info "Defaulting to environment variable '${envVar}'"
      value=$(env |grep ^${envVar}= |sed 's/.*=//g')
    fi
    echo ${value}
}

MODE=$1; shift
DEBUG_MODE=$1; shift
info "Using '$0' as docker credsStore."
info "Mode: '${MODE}'"
if [ "$MODE" == 'get' ]; then
  read REGISTRY
  info "Returing credentials for '${REGISTRY}' ..."
  userName=$(getUserName 'registry.docker.io')
  password=$(getPassword 'registry.docker.io')
  echo "{\"Username\": \"${userName}\",\"Secret\": \"${password}\"}"
elif [ "${MODE}" == 'store' ];then
  info "store: not implemented"
elif [ "${MODE}" == 'erase' ]; then
  info "erase: not implemented"
fi
